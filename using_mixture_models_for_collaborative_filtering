Completing missing entries
Now that we have a mixture model, how do we use it to complete a partially observed rating matrix? Derive an expression for 
completing a particular row, say where the observed values are.

In em.py implement the function fill_matrix.py that takes as input an incomplete data matrix X as well as a mixture model, and outputs a completed version of the matrix X_pred. 

def fill_matrix(X: np.ndarray, mixture: GaussianMixture) -> np.ndarray:
    """Fills an incomplete matrix according to a mixture model

    Args:
        X: (n, d) array of incomplete data (incomplete entries =0)
        mixture: a mixture of gaussians

    Returns
        np.ndarray: a (n, d) array with completed data
    """
    def log_gaussian(x: np.ndarray, mean: np.ndarray, var: np.ndarray) -> float:
        """Computes the log probablity of vector x under a normal distribution
        Args:
            x: (d, ) array holding the vector's coordinates
            mean: (d, ) mean of the gaussian
            var: variance of the gaussian
        Returns:
            float: the log probability
        """
        d = len(x)
        log_prob = -d / 2.0 * np.log(2 * np.pi * var)
        log_prob -= 0.5 * ((x - mean) ** 2).sum() / var
        return log_prob


    n, d = X.shape
    K, _ = mixture.mu.shape
    X_pred = X.copy()

    for i in range(n):
        mask = (X[i, :] != 0)
        mask0 = (X[i, :] == 0)
        post = np.zeros(K)
        for j in range(K):
            log_likelihood = log_gaussian(X[i, mask], mixture.mu[j, mask],
                                          mixture.var[j])
            post[j] = np.log(mixture.p[j]) + log_likelihood
        post = np.exp(post - logsumexp(post))

        X_pred[i, mask0] = np.dot(post, mixture.mu[:, mask0])

    return X_pred


