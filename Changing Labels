We now wish to classify the digits by their (mod 3) value, such that the new label y^(i) of sample i is the old y^(i) (mod3) . 

#  Using the Current Model - update target 
Given that we already classified every x^(i) as a digit, we could use the model we already trained and just calculate our estimations (mod 3). 

def update_y(train_y, test_y):
    """
    Changes the old digit labels for the training and test set for the new (mod 3)
    labels.

    Args:
        train_y - (n, ) NumPy array containing the labels (a number between 0-9)
                 for each datapoint in the training set
        test_y - (n, ) NumPy array containing the labels (a number between 0-9)
                for each datapoint in the test set

    Returns:
        train_y_mod3 - (n, ) NumPy array containing the new labels (a number between 0-2)
                     for each datapoint in the training set
        test_y_mod3 - (n, ) NumPy array containing the new labels (a number between 0-2)
                    for each datapoint in the test set
    """
    return np.mod(train_y, 3), np.mod(test_y, 3)

#  Using the Current Model - compute test error 
Implement compute_test_error_mod3 function, which takes the test points X, their correct labels Y (digits (mod 3) from 0-2), theta, and the temp_parameter, and returns the error. 

def compute_test_error_mod3(X, Y, theta, temp_parameter):
    """
    Returns the error of these new labels when the classifier predicts the digit. (mod 3)

    Args:
        X - (n, d - 1) NumPy array (n datapoints each with d - 1 features)
        Y - (n, ) NumPy array containing the labels (a number from 0-2) for each
            data point
        theta - (k, d) NumPy array, where row j represents the parameters of our
                model for label j
        temp_parameter - the temperature parameter of softmax function (scalar)

    Returns:
        test_error - the error rate of the classifier (scalar)
    """
    pred_Y = get_classification(X, theta, temp_parameter)
    return 1 - np.mean(np.mod(pred_Y, 3) == Y)

